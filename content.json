{"meta":{"title":"scr1pt_k1ddi3' blog","subtitle":"","description":"","author":"scr1pt_k1ddi3","url":"https://scr1pt-k1ddi3.github.io","root":"/"},"pages":[{"title":"about","date":"2022-04-13T10:12:53.000Z","updated":"2022-04-17T11:56:56.618Z","comments":true,"path":"about.html","permalink":"https://scr1pt-k1ddi3.github.io/about.html","excerpt":"","text":"💻 关于博客本站纯属瞎胡闹搞的，请各位客官不要轻信❤️：😃 关于我😎 个人简介本人是一只小傻鸟🐣🐥🐤，大菜狗🐶，还请各位客官多多包含,多多指教🙏🙏🙏。😷参悟真谛：小丑在庙堂， 大师在流浪。"},{"title":"文章归档","date":"2022-04-13T14:16:19.393Z","updated":"2022-04-13T13:25:15.839Z","comments":true,"path":"archive.html","permalink":"https://scr1pt-k1ddi3.github.io/archive.html","excerpt":"","text":""},{"title":"categories","date":"2022-04-13T10:54:10.000Z","updated":"2022-04-13T13:20:09.026Z","comments":true,"path":"categories/index.html","permalink":"https://scr1pt-k1ddi3.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"BUUCTF 2018 Online Tool","slug":"Tool","date":"2022-04-17T04:51:43.000Z","updated":"2022-04-17T12:25:20.689Z","comments":true,"path":"2022/04/17/Tool/","link":"","permalink":"https://scr1pt-k1ddi3.github.io/2022/04/17/Tool/","excerpt":"","text":"&lt;?php if (isset($_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;])) &#123; $_SERVER[&#39;REMOTE_ADDR&#39;] = $_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]; &#125; if(!isset($_GET[&#39;host&#39;])) &#123; highlight_file(__FILE__); &#125; else &#123; $host = $_GET[&#39;host&#39;]; $host = escapeshellarg($host); $host = escapeshellcmd($host); $sandbox = md5(&quot;glzjin&quot;. $_SERVER[&#39;REMOTE_ADDR&#39;]); echo &#39;you are in sandbox &#39;.$sandbox; @mkdir($sandbox); chdir($sandbox); echo system(&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;.$host); &#125; 这里面主要是 $host = escapeshellarg($host);$host = escapeshellcmd($host); 这里会产生漏洞。 escapeshellarg和escapeshellcmd这两个函数在一起使用时会造成漏洞。 escapeshellarg 这两个函数都是防止命令执行时转义’的函数。escapellarg是将’转义，escapelshellcmd是在\\和’等之前加\\转义。这样会造成漏洞： escapeshellcmd 这两个函数都是防止命令执行时转义’的函数。escapellarg是将’转义，escapelshellcmd是在\\和’等之前加\\转义。这样会造成漏洞： 我们详细分析一下： 传入的参数是：172.17.0.2&#39; -v -d a=1 经过escapeshellarg处理后变成了&#39;172.17.0.2&#39;\\&#39;&#39; -v -d a=1&#39;，即先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。 经过escapeshellcmd处理后变成&#39;172.17.0.2&#39;\\\\&#39;&#39; -v -d a=1\\&#39;，这是因为escapeshellcmd对\\以及最后那个不配对儿的引号进行了转义：http://php.net/manual/zh/function.escapeshellcmd.php 最后执行的命令是curl &#39;172.17.0.2&#39;\\\\&#39;&#39; -v -d a=1\\&#39;，由于中间的\\\\被解释为\\而不再是转义字符，所以后面的&#39;没有被转义，与再后面的&#39;配对儿成了一个空白连接符。所以可以简化为curl 172.17.0.2\\ -v -d a=1&#39;，即向172.17.0.2\\发起请求，POST 数据为a=1&#39;。 回到mail中，我们的 payload 最终在执行时变成了&#39;-fa&#39;\\\\&#39;&#39;\\( -OQueueDirectory=/tmp -X/var/www/html/test.php \\)@a.com\\&#39;，分割后就是-fa\\(、-OQueueDirectory=/tmp、-X/var/www/html/test.php、)@a.com&#39;，最终的参数就是这样被注入的。 ps：这里好像只能是linux环境下才行。 这里就是通过第一次的转义变成了&#39;172.17.0.2&#39;\\&#39;&#39; -v -d a=1&#39;，然后这时是172.17.0.2&#39; -v -d a=1这样，经过第二次后是&#39;172.17.0.2&#39;\\\\&#39;&#39; -v -d a=1\\&#39;，\\会被认为是\\所以变成了172.17.0.2\\ -v -d a=1&#39;这样的命令。 这时候搜索可以发现在nmap命令中 有一个参数-oG可以实现将命令和结果写到文件 这个命令就是我们的输入可控！然后写入到文件！OK很自然的想到了上传一个一句话木马了… ?host&#x3D;’ -oG hack.php ‘ (45条消息) BUUCTF 2018 Online Tool_kid的博客-CSDN博客_buuctf escapeshellarg与escapeshellcmd共伤 - NineOne_E - 博客园 (cnblogs.com) PHP escapeshellarg()+escapeshellcmd() 之殇 (seebug.org)","categories":[{"name":"CTF","slug":"CTF","permalink":"https://scr1pt-k1ddi3.github.io/categories/CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://scr1pt-k1ddi3.github.io/tags/CTF/"},{"name":"Web","slug":"Web","permalink":"https://scr1pt-k1ddi3.github.io/tags/Web/"}]},{"title":"hello world","slug":"hello-world","date":"2021-04-08T06:45:37.000Z","updated":"2022-04-17T12:26:27.939Z","comments":true,"path":"2021/04/08/hello-world/","link":"","permalink":"https://scr1pt-k1ddi3.github.io/2021/04/08/hello-world/","excerpt":"","text":"Hello World👽! &lt;?php highlight_file(__FILE__); error_reporting(0); $file = &quot;1nD3x.php&quot;; $shana = $_GET[&#39;shana&#39;]; $passwd = $_GET[&#39;passwd&#39;]; $arg = &#39;&#39;; $code = &#39;&#39;; echo &quot;&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;&quot;; if($_SERVER) &#123; if ( preg_match(&#39;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\\.|\\&quot;|\\&#39;|log/i&#39;, $_SERVER[&#39;QUERY_STRING&#39;]) ) die(&#39;You seem to want to do something bad?&#39;); &#125; if (!preg_match(&#39;/http|https/i&#39;, $_GET[&#39;file&#39;])) &#123; if (preg_match(&#39;/^aqua_is_cute$/&#39;, $_GET[&#39;debu&#39;]) &amp;&amp; $_GET[&#39;debu&#39;] !== &#39;aqua_is_cute&#39;) &#123; $file = $_GET[&quot;file&quot;]; echo &quot;Neeeeee! Good Job!&lt;br&gt;&quot;; &#125; &#125; else die(&#39;fxck you! What do you want to do ?!&#39;); if($_REQUEST) &#123; foreach($_REQUEST as $value) &#123; if(preg_match(&#39;/[a-zA-Z]/i&#39;, $value)) die(&#39;fxck you! I hate English!&#39;); &#125; &#125; if (file_get_contents($file) !== &#39;debu_debu_aqua&#39;) die(&quot;Aqua is the cutest five-year-old child in the world! Isn&#39;t it ?&lt;br&gt;&quot;); if ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123; extract($_GET[&quot;flag&quot;]); echo &quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;; &#125; else&#123; die(&quot;fxck you! you don&#39;t know my password! And you don&#39;t know sha1! why you come here!&quot;); &#125; if(preg_match(&#39;/^[a-z0-9]*$/isD&#39;, $code) || preg_match(&#39;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\\`|\\&#123;|\\%|x|\\&amp;|\\$|\\*|\\||\\&lt;|\\&quot;|\\&#39;|\\=|\\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\\.|log|\\^/i&#39;, $arg) ) &#123; die(&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#39;t get my flag =w=&quot;); &#125; else &#123; include &quot;flag.php&quot;; $code(&#39;&#39;, $arg); &#125; ?&gt;","categories":[{"name":"hello","slug":"hello","permalink":"https://scr1pt-k1ddi3.github.io/categories/hello/"}],"tags":[{"name":"hello","slug":"hello","permalink":"https://scr1pt-k1ddi3.github.io/tags/hello/"}]}],"categories":[{"name":"CTF","slug":"CTF","permalink":"https://scr1pt-k1ddi3.github.io/categories/CTF/"},{"name":"hello","slug":"hello","permalink":"https://scr1pt-k1ddi3.github.io/categories/hello/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://scr1pt-k1ddi3.github.io/tags/CTF/"},{"name":"Web","slug":"Web","permalink":"https://scr1pt-k1ddi3.github.io/tags/Web/"},{"name":"hello","slug":"hello","permalink":"https://scr1pt-k1ddi3.github.io/tags/hello/"}]}